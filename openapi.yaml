openapi: 3.1.0
info:
    title: Comuting API
    description: |-
        This is the first draft of commuting API.
        以下除了 /login 外均需要在登入狀態下才能呼叫，若未登入會產生 401 錯誤。所有傳入錯誤參數的 request ，均會得到 400 錯誤。
    version: 1.0.0
tags:
    - name: user
      description: Operations about user
    - name: driver
      description: Operations for drivers
    - name: passenger
      description: Operations for passengers
paths:
    /login:
        post:
            tags:
                - user
            summary: Request to login
            operationId: login
            security: []
            requestBody:
                description: Supply user credential to login
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
            responses:
                "201":
                    description: Login successfully
                "400":
                    description: Invalid credential
                    $ref: "#/components/responses/ErrorMessage"
    /logout:
        post:
            tags:
                - user
            security:
                - cookieAuth: []
            summary: Logout current user
            operationId: logout
            responses:
                "201":
                    description: Successful operation

    /me:
        get:
            tags:
                - user
            summary: Get current user
            security:
                - cookieAuth: []
            operationId: user
            responses:
                "200":
                    description: successfully get current user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
    /routes:
        get:
            tags:
                - passenger
                - driver
            summary: 取得行程
            security:
                - cookieAuth: []
            description: |-
                取得行程。 mode 參數需帶三種模式其中一種：
                 - available: 系統中現有有位置且允許搜尋的行程
                 - attending: 作為乘客參與的行程
                 - driving: 作為司機開車載人的行程
            operationId: passengerGetRoutes
            parameters:
                - in: query
                  name: mode
                  description: 模式選擇
                  schema:
                      type: string
                      enum: ["available", "attending", "driving"]
                - in: query
                  name: form
                  description: 起始日期
                  schema:
                      type: string
                      format: date
                      examples:
                          - "2023-10-22"
                          - "today"
                - in: query
                  name: to
                  description: 結束日期
                  schema:
                      type: string
                      format: date
                      examples: ["2023-10-25"]
            responses:
                "200":
                    description: 成功取得行程
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Route"
        post:
            tags:
                - driver
            summary: Post new route
            security:
                - cookieAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                date:
                                    type: string
                                    format: date
                                workStatus:
                                    type: boolean
                                    description: true 上班, false 下班
                                stations:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                                format: int64
                                                examples: [10]
                                            datetime:
                                                type: string
                                                format: date-time
                                                examples: ["2023-11-16T10:30"]
            responses:
                "201":
                    description: Successful Operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Route"
    /routes/{id}:
        get:
            tags:
                - passenger
                - driver
            summary: Get the info of a route_id
            security:
                - cookieAuth: []
            parameters:
                - name: id
                  in: path
                  description: Route id
                  required: true
                  schema:
                      type: integer
                      format: int64
                      examples: [1]
            responses:
                "200":
                    description: Successfully get the specified route
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Route"
                "404":
                    description: Route not found
                    $ref: "#/components/responses/ErrorMessage"
        delete:
            tags:
                - driver
            summary: Delete the specified routes
            security:
                - cookieAuth: []
            parameters:
                - name: id
                  in: path
                  description: Route id
                  required: true
                  schema:
                      type: integer
                      format: int64
                      examples: [1]
            responses:
                "204":
                    description: Successful operation
                "403":
                    description: Permission denied
                    $ref: "#/components/responses/ErrorMessage"
                "404":
                    description: Route not found
                    $ref: "#/components/responses/ErrorMessage"
    /routes/{id}/stations:
        get:
            tags:
                - driver
                - passenger
            description: Get list of the stations in the route
            security:
                - cookieAuth: []
            parameters:
                - in: path
                  name: id
                  description: Route ID
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Route"
                "404":
                    description: Route not found
                    $ref: "#/components/responses/ErrorMessage"
    /routes/{id}/stations/{station_id}:
        put:
            tags:
                - driver
            description: Add a new station to the route
            security:
                - cookieAuth: []
            parameters:
                - in: path
                  name: id
                  description: Route ID
                  required: true
                  schema:
                      type: integer
                      format: int64
                      examples: [10]
                - in: path
                  name: station_id
                  description: Station ID
                  required: true
                  schema:
                      type: integer
                      format: int64
                      examples: [20]
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                datetime:
                                    type: string
                                    format: date-time
                                    examples: ["2023-10-22T10:30"]
            responses:
                "204":
                    description: Operation Successful
                "403":
                    description: Permission Denied
                    $ref: "#/components/responses/ErrorMessage"
        delete:
            tags:
                - driver
            description: Delete the station in the route
            security:
                - cookieAuth: []
            responses:
                "204":
                    description: Successful operation
                "403":
                    description: Permission Denied
                    $ref: "#/components/responses/ErrorMessage"
    /requests:
        get:
            tags:
                - passenger
                - driver
            summary: 取得請求
            security:
                - cookieAuth: []
            operationId: requestsGet
            parameters:
                - name: mode
                  in: query
                  schema:
                      type: string
                      enum: ["available", "me"]
            responses:
                "200":
                    description: 成功取得請求
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Request"
        post:
            tags:
                - passenger
                - driver
            summary: 新增請求
            security:
                - cookieAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                date:
                                    type: string
                                    format: date
                                    examples: ["2023-10-22"]
                                workStatus:
                                    type: boolean
                                route_id:
                                    type: integer
                                    format: int64
                                    examples: [10]
                                on_station_id:
                                    type: integer
                                    format: int64
                                    examples: [20]
                                off_station_id:
                                    type: integer
                                    format: int64
                                    examples: [20]
            responses:
                "200":
                    description: Request created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Request"
                "400":
                    description: 有相同時間的請求，或該時間已安排行程
                    $ref: "#/components/responses/ErrorMessage"
    /requests/{id}:
        get:
            tags:
                - passenger
                - driver
            summary: 使用 ID 取得請求
            security:
                - cookieAuth: []
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Request"
        delete:
            tags:
                - passenger
                - driver
            sumary: 刪除請求
            security:
                - cookieAuth: []
            responses:
                "204":
                    description: 操作成功
    /notifications:
        get:
            tags:
                - passenger
                - driver
            summary: 取得通知
            security:
                - cookieAuth: []
            parameters:
                - in: query
                  name: mode
                  description: 通知取得模式
                  schema:
                      type: string
                      enum: ["all", "passenger", "driver"]
            responses:
                "200":
                    description: 成功取得通知
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Notification"
    /notifications/{id}:
        get:
            tags:
                - passenger
                - driver
            summary: 使用通知 ID 取得通知
            security:
                - cookieAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                      format: int64
                      examples: [40]
            responses:
                "200":
                    description: 成功取得通知
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Notification"
                "404":
                    description: 找不到此則通知
                    $ref: "#/components/responses/ErrorMessage"
    /notifications/{id}/read:
        post:
            tags:
                - passenger
                - driver
            summary: 設定通知為已讀
            responses:
                "204":
                    description: 操作成功
                "404":
                    description: 找不到此則通知
                    $ref: "#/components/responses/ErrorMessage"
components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                    example: John James
                avatar:
                    type: string
                    format: url
                email:
                    type: string
                    example: john@email.com
                password:
                    type: string
                    writeOnly: true
                    example: "<password>"
        Route:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 23
                date:
                    type: string
                    format: date
                    example: 2023-10-22
                stations:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: station ID
                                example: 5
                            name:
                                type: string
                                format: string
                                example: 臺大校門口
                            datetime:
                                type: string
                                format: datetime
                                example: 2023-10-22T07:30
                driver:
                    $ref: "#/components/schemas/User"
        Request:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 20
                passenger:
                    $ref: "#/components/schemas/User"
                route:
                    $ref: "#/components/schemas/Route"
                on:
                    $ref: "#/components/schemas/Station"
                off:
                    $ref: "#/components/schemas/Station"
        Station:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 23
                name:
                    type: string
                    format: string
                    example: 臺大校門口
        Notification:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 3
                title:
                    type: string
                    example: "乘客請求通知"
                content:
                    type: string
                    example: "乘客 XXX 發送共乘請求，請點此來查看"
                location:
                    type: string
                    format: url
                    example: "https://example.com"
    responses:
        ErrorMessage:
            description: 回傳錯誤訊息用
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: Error message
    securitySchemes:
        cookieAuth:
            type: apiKey
            name: SESSION_ID
            in: cookie
